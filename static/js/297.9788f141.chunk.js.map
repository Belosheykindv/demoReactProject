{"version":3,"file":"static/js/297.9788f141.chunk.js","mappings":"qOAMA,EAHgB,SAACA,GACb,OAAO,iBAAKC,UAAWC,EAAAA,EAAAA,SAAhB,UAA6BF,EAAMG,QAAnC,KAA4C,oBACtD,E,WCJD,EAAqE,iCAArE,EAA+G,2BCY/G,EATmB,SAACH,GAChB,IAAII,EAAO,YAAcJ,EAAMK,GAC/B,OAAO,iBAAKJ,UAAWC,EAAhB,WACH,gBAAKI,IAAKN,EAAMO,UAChB,SAAC,KAAD,CAASC,GAAIJ,EAAMH,UAAW,SAAAQ,GAAO,OAAIA,EAAQC,SAAWR,EAAWA,CAAlC,EAArC,UACA,yBAAMF,EAAMW,WAGnB,E,sDCyDD,EA1DgB,SAACX,GAEb,IAQA,GAAkCY,EAAAA,EAAAA,WAAS,GAA3C,eAAeC,GAAf,WAMIC,EAASd,EAAMe,YACfC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYR,KAAMQ,EAAER,KAAMN,GAAIc,EAAEd,GAAIE,OAAQY,EAAEZ,QAAaY,EAAEd,GAAjE,IACpCe,EAAiBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAASnB,QAASmB,EAAEnB,SAAcmB,EAAEjB,GAAxC,IACzC,OAAmB,IAAfL,EAAMuB,MAAuB,SAAC,KAAD,CAAUf,GAAI,YAE3C,iBAAKP,UAAWC,EAAAA,EAAAA,QAAhB,WACI,yBACKc,KAEL,iBAAKf,UAAWC,EAAAA,EAAAA,SAAhB,WACI,SAAC,KAAD,CACIsB,SAzBC,SAACC,GACgB,KAA1BA,EAAOC,qBAAqDC,IAA1BF,EAAOC,iBACzC1B,EAAM4B,iBAAiBH,EAAOC,gBAC9BD,EAAOC,eAAiB,GACxBb,GAAgB,GAGvB,EAmBegB,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,EAAiBC,WAAjB,EAA6BC,SAA7B,OACJ,kBAAMR,SAAUM,EAAhB,WACI,0BACI,SAAC,KAAD,CACIG,QAAS,SAACC,IArBpB,SAACA,GACJrB,EAAN,IAALqB,EAGP,CAiBiDC,CAAcD,EAAEE,cAAcC,MAAQ,EACxDC,UAAWC,EAAAA,GACXC,UAAWC,EAAAA,EACXC,YAAY,sGACZ/B,KAAM,iBACNgC,aAAc,GACdC,UAAWC,EAAAA,GAAUC,EAAAA,SAE7B,0BACI,sBAbJ,IAsBX1B,MAEL,gBAAKnB,UAAWC,EAAAA,EAAAA,SAAhB,uLAGX,E,WChDD,GAAe6C,E,SAAAA,KACXC,EAAAA,EAAAA,KAZoB,SAAClC,GACrB,MAAO,CACHC,YAAaD,EAAMC,YAE1B,IAE0B,SAACkC,GACxB,MAAO,CACHrB,iBAAkB,SAACF,GAAqBuB,GAASC,EAAAA,EAAAA,GAA8BxB,GAAkB,EAExG,IAGGyB,EAAAA,EAFJ,CAGEC,E,sBCpBF,KAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,OAAS,wBAAwB,IAAM,qBAAqB,OAAS,wBAAwB,SAAW,0BAA0B,UAAY,2BAA2B,SAAW,0BAA0B,QAAU,yB","sources":["Components/Dialogs/Message/Message.jsx","webpack://my-first-app/./src/Components/Dialogs/DialogItem/DialogItem.module.css?9cb2","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/DialogsC.jsx","Components/Dialogs/Dialogs-container.jsx","webpack://my-first-app/./src/Components/Dialogs/Dialogs.module.css?db5c"],"sourcesContent":["import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.messages}>{props.message} <hr /></div>\r\n}\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"DialogItem_dialogs__ilivO\",\"dialogsItems\":\"DialogItem_dialogsItems__Dj2pt\",\"active\":\"DialogItem_active__I0iJv\",\"messages\":\"DialogItem_messages__g1OSr\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './DialogItem.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return <div className={s.dialogsItems}>\r\n        <img src={props.imgSrc}></img>\r\n        <NavLink to={path} className={navData => navData.isActive ? s.active : s.dialogsItems}>\r\n        <div>{props.name}</div>\r\n        </NavLink>\r\n    </div>\r\n}\r\nexport default DialogItem;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Field, Form } from \"react-final-form\";\r\nimport { maxLength100, required } from \"../../Utils/Validators/validators\";\r\nimport { FormCreate, TextArea } from \"../Common/FormControls/formControls\";\r\nimport { Input, List, Avatar, Button } from \"antd\";\r\n\r\nconst Dialogs = (props) => {\r\n    // const messageArea = React.createRef();\r\n    const onSubmit = (values) => {\r\n        if (values.newMessageBody !== '') if (values.newMessageBody !== undefined) {\r\n            props.addDialogMessage(values.newMessageBody)\r\n            values.newMessageBody = ''\r\n            setButtonStatus(false)\r\n        }\r\n\r\n    };\r\n    const [status, setButtonStatus] = useState(false)\r\n    const buttonHandler = (e) => {\r\n        if (e == '') { setButtonStatus(false) }\r\n        else\r\n            setButtonStatus(true)\r\n    }\r\n    let state = (props.dialogsPage);\r\n    let dialogElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} imgSrc={d.imgSrc} key={d.id} />);\r\n    let messageElement = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n    if (props.auth === false) return <Navigate to={'/login'} />\r\n    return (\r\n        <nav className={s.dialogs}>\r\n            <div >\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <Form\r\n                    onSubmit={onSubmit}\r\n                    render={({ handleSubmit, submitting, pristine }) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div>\r\n                                <Field\r\n                                    onInput={(e) => { buttonHandler(e.currentTarget.value) }}\r\n                                    component={FormCreate}\r\n                                    fieldType={Input}\r\n                                    placeholder='Введите сообщениеee'\r\n                                    name={'newMessageBody'}\r\n                                    defaultValue={''}\r\n                                    validate={(required, maxLength100)} />\r\n                            </div>\r\n                            <div>\r\n                                <br />\r\n                                {/* <Button\r\n                                    ghost={true}\r\n                                    disabled={status !== true}\r\n                                    type='primary'\r\n                                    htmlType={\"submit\"} >Отправить сообщение</Button> */}\r\n                            </div>\r\n                        </form>)}\r\n                />\r\n                {messageElement}\r\n            </div>\r\n            <div className={s.messages}>Здесь могла бы быть ваша реклама</div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","\r\nimport { addDialogMessageActionCreator } from \"../../Redux/dialogPage-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport Dialogs from \"./DialogsC\";\r\nimport { withAuthRedirect } from \"../../Hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addDialogMessage: (newMessageBody) => { dispatch(addDialogMessageActionCreator(newMessageBody)) },\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__prqlk\",\"dialogsItems\":\"Dialogs_dialogsItems__MsBDq\",\"active\":\"Dialogs_active__XGQ+o\",\"messages\":\"Dialogs_messages__1ybel\",\"button\":\"Dialogs_button__6VBcC\",\"btn\":\"Dialogs_btn__ayx5J\",\"disBtn\":\"Dialogs_disBtn__pjuCW\",\"todoMain\":\"Dialogs_todoMain__REx+I\",\"todoInput\":\"Dialogs_todoInput__upOVV\",\"todoList\":\"Dialogs_todoList__TxKrX\",\"inputCB\":\"Dialogs_inputCB__-QJXn\"};"],"names":["props","className","s","message","path","id","src","imgSrc","to","navData","isActive","name","useState","setButtonStatus","state","dialogsPage","dialogElements","dialogs","map","d","messageElement","messages","m","auth","onSubmit","values","newMessageBody","undefined","addDialogMessage","render","handleSubmit","submitting","pristine","onInput","e","buttonHandler","currentTarget","value","component","FormCreate","fieldType","Input","placeholder","defaultValue","validate","required","maxLength100","compose","connect","dispatch","addDialogMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}