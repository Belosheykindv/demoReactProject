{"version":3,"file":"static/js/989.4034ab25.chunk.js","mappings":"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","sources":["webpack://my-first-app/./src/Components/Users/users.module.css?77e1","Components/Users/Users.jsx","Components/Users/usersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"users_item__tAqf6\",\"button\":\"users_button__2mJq+\",\"img\":\"users_img__dbrrw\",\"selectedPage\":\"users_selectedPage__IwM+o\"};","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport userPhoto from '../../Images/userPhoto.png';\r\nimport U from './users.module.css'\r\nimport { followAPI } from '../../Api/apiRequest';\r\nimport { v1 } from 'uuid'\r\nimport { Pagination, theme } from 'antd';\r\nimport { hover } from '@testing-library/user-event/dist/hover';\r\nconst Users = (props) => {\r\n    const { token: { colorBgContainer, borderRadiusLG } } = theme.useToken();\r\n\r\n    const onChange = (page) => {\r\n        props.onPageChanged(page);\r\n    };\r\n    return (<div >\r\n        <div>\r\n            <Pagination\r\n                showSizeChanger={false}\r\n                showQuickJumper\r\n                onChange={onChange}\r\n                defaultPageSize={props.pageSize}\r\n                defaultCurrent={1}\r\n                total={props.totalUsersCount}\r\n                showTotal={(total) => `${total} users`}\r\n            />\r\n        </div>\r\n        {props.users.map(u => <div\r\n            style={{\r\n                margin: '12px 8px',\r\n                padding: 12,\r\n                // minHeight: 'auto',\r\n                background: colorBgContainer,\r\n                borderRadius: borderRadiusLG\r\n            }}\r\n            key={v1()}> <hr />\r\n            <span>\r\n                <div className={U.item}>\r\n                    <div><NavLink to={'/profile/' + u.id}>\r\n                        <img src={u.photos.small != null ? u.photos.small : userPhoto}></img></NavLink>\r\n                    </div>\r\n                    <div>\r\n                        <span>Имя - <b>{u.name}</b></span> <br />\r\n                        {/* <span>ID - {u.id} </span><br /> */}\r\n                        <span> Статус - {u.status || 'отсутствует'}</span>\r\n                    </div>\r\n                </div>\r\n                <div className={U.button}>\r\n                    {u.followed\r\n                        ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                            props.togglefollowingProgress(true, u.id)\r\n                            followAPI.delete(u.id).then(data => {\r\n                                if (data.resultCode === 0) { props.unfollow(u.id) }\r\n                                props.togglefollowingProgress(false, u.id)\r\n                            })\r\n                        }}>Отписаться</button>\r\n                        : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                            props.togglefollowingProgress(true, u.id)\r\n                            followAPI.post(u.id).then(data => {\r\n                                if (data.resultCode === 0) { props.follow(u.id) }\r\n                                props.togglefollowingProgress(false, u.id)\r\n                            })\r\n                        }}>Подписаться</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n\r\n\r\n            </span>\r\n        </div >)\r\n        }\r\n    </div >)\r\n}\r\n\r\nexport default Users;","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { follow, getUsers, getTotalUsersCount, getPageUsers, setCurrentPage, setTotalUsersCount, setUsers, unfollow, toggleIsFetching, togglefollowingProgress } from \"../../Redux/users-reducer\";\r\nimport Users from './Users';\r\nimport Preloader from \"../Common/Preloader/preloader\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../Hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nconst UsersApiContainer = (props) => {\r\n    useEffect(() => {\r\n        props.toggleIsFetching(true);\r\n        props.getUsers(props.pageSize)\r\n        props.setCurrentPage(1);\r\n    }, [])\r\n    const onPageChanged = (pageNumber) => {\r\n        props.toggleIsFetching(true);\r\n        let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n        let truePage = pagesCount - pageNumber + 1;\r\n        console.log(truePage);\r\n        props.setCurrentPage(pageNumber);\r\n        props.getPageUsers(props.pageSize, truePage)\r\n    }\r\n    if (props.auth === false) return <Navigate to={'/login'} />\r\n    return <>\r\n        {props.isFetching ? <Preloader /> : null}\r\n        <Users\r\n            onPageChanged={onPageChanged}\r\n            pageSize={props.pageSize}\r\n            totalUsersCount={props.totalUsersCount}\r\n            currentPage={props.currentPage}\r\n            follow={props.follow}\r\n            unfollow={props.unfollow}\r\n            users={props.users}\r\n            followingInProgress={props.followingInProgress}\r\n            togglefollowingProgress={props.togglefollowingProgress}\r\n        />\r\n    </>\r\n}\r\n// class UsersApiContainer extends React.Component {\r\n//     componentDidMount() {\r\n//         this.props.toggleIsFetching(true);\r\n//         this.props.getUsers(this.props.pageSize)\r\n//         this.props.setCurrentPage(1);\r\n//     }\r\n//     onPageChanged = (pageNumber) => {\r\n//         this.props.toggleIsFetching(true);\r\n//         let pagesCount = Math.ceil(this.props.totalUsersCount / this.props.pageSize);\r\n//         let truePage = pagesCount - pageNumber + 1;\r\n//         console.log(truePage);\r\n//         this.props.setCurrentPage(pageNumber);\r\n//         this.props.getPageUsers(this.props.pageSize, truePage)\r\n//     }\r\n\r\n//     render() {\r\n//         if (this.props.auth === false) return <Navigate to={'/login'} />\r\n//         return <>\r\n//             {this.props.isFetching ? <Preloader /> : null}\r\n//             <Users\r\n//                 onPageChanged={this.onPageChanged}\r\n//                 pageSize={this.props.pageSize}\r\n//                 totalUsersCount={this.props.totalUsersCount}\r\n//                 currentPage={this.props.currentPage}\r\n//                 follow={this.props.follow}\r\n//                 unfollow={this.props.unfollow}\r\n//                 users={this.props.users}\r\n//                 followingInProgress={this.props.followingInProgress}\r\n//                 togglefollowingProgress={this.props.togglefollowingProgress}\r\n//             />\r\n//         </>\r\n//     }\r\n// }\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            getUsers, getPageUsers,\r\n            follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching, togglefollowingProgress\r\n        }), withAuthRedirect)\r\n\r\n    (UsersApiContainer)\r\n"],"names":["props","theme","token","colorBgContainer","borderRadiusLG","showSizeChanger","showQuickJumper","onChange","page","onPageChanged","defaultPageSize","pageSize","defaultCurrent","total","totalUsersCount","showTotal","users","map","u","style","margin","padding","background","borderRadius","className","U","to","id","src","photos","small","userPhoto","name","status","followed","disabled","followingInProgress","some","onClick","togglefollowingProgress","followAPI","then","data","resultCode","unfollow","follow","v1","compose","connect","state","usersPage","currentPage","isFetching","getUsers","getPageUsers","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","withAuthRedirect","useEffect","auth","pageNumber","truePage","Math","ceil","console","log"],"sourceRoot":""}