{"version":3,"file":"static/js/470.415d8286.chunk.js","mappings":"2OAeMA,EAAO,WACT,IAAMC,GAAWC,EAAAA,EAAAA,MAQjB,OAPAC,EAAAA,EAAAA,YAAU,WAEN,OADAF,GAASG,EAAAA,EAAAA,OACF,WACHH,GAASI,EAAAA,EAAAA,OACTJ,GAASK,EAAAA,EAAAA,MACZ,CACJ,GAAE,KACI,4BACH,SAACC,EAAD,KACA,SAACC,EAAD,MAEP,EACKD,EAAW,WACb,IAAME,GAAWC,EAAAA,EAAAA,KAAa,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,QAAf,IACnC,OAAO,gBAAKI,MAAO,CAAEC,OAAQ,QAASC,UAAW,QAA1C,SACFN,EAASO,KAAI,SAACC,EAAGC,GAAJ,OAAc,SAACC,EAAD,CAAoBC,QAASH,EAAGI,GAAIJ,GAAtBA,EAAEI,GAA9B,KAErB,EACKF,EAAUG,EAAAA,MAAW,YAAkB,IAAfF,EAAc,EAAdA,QAC1BG,QAAQC,IAAI,iHACZ,IAAMC,GAAiBC,EAAAA,EAAAA,QAAO,MAQ9B,OAJAvB,EAAAA,EAAAA,YAAU,YAHa,WAAO,IAAD,EACzB,UAAAsB,EAAeE,eAAf,SAAwBC,eAAe,CAAEC,SAAU,UACtD,CAEGC,EACH,GAAE,CAACV,KAEG,iBAAKW,IAAKN,EAAV,WACH,SAAC,KAAD,CAASO,GAAI,YAAcZ,EAAQa,OAAnC,UAA2C,gBAAKpB,MAAO,CAAEC,OAAQ,GAAIoB,MAAO,IAAMC,IAAKf,EAAQgB,UAD5F,KACgH,uBAAIhB,EAAQiB,YAC/H,kBACCjB,EAAQA,SACT,oBAEP,IACKZ,EAAiB,WACnB,OAA8B8B,EAAAA,EAAAA,YAA9B,eAAOlB,EAAP,KAAgBmB,EAAhB,KACMtC,GAAWC,EAAAA,EAAAA,MACXsC,GAAS9B,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,KAAK4B,MAAtB,IACrBC,GAAWf,EAAAA,EAAAA,QAAO,MACxB,GAAqCY,EAAAA,EAAAA,WAAS,GAA9C,eAAOI,EAAP,KAAkBC,EAAlB,KAcA,OAAO,4BACH,0BAAK,SAAC,IAAD,CAAOC,KAAK,QAAQC,WAAS,EAACC,UAAW,IAAKC,QAAS,SAACC,GAAD,OAAOT,EAAWS,EAAEC,cAAcC,MAAlC,EAA0CnB,IAAKU,EAAUU,KAAM,YAAaC,SAAU,SAACJ,GAAD,OANjI,SAACA,GACHL,EAAN,IAALK,EAGP,CAE4JK,CAAaL,EAAEC,cAAcC,MAApC,EAA4CA,MAAO9B,EAASkC,YAAY,yGAC1N,mBACA,0BAAK,mBACDC,UAAWb,EAAY7B,EAAAA,EAAAA,IAAYA,EAAAA,EAAAA,OACnC2C,SAAqB,UAAXhB,IAAoC,IAAdE,EAChCe,QAnBmB,WACvB,IAAKrC,EACD,OAAOuB,GAAgB,GAE3B1C,GAASyD,EAAAA,EAAAA,IAAYtC,IACrBmB,EAAW,IACXI,GAAgB,EACnB,EASQ,wEAKZ,EAED,WAAegB,EAAAA,EAAAA,IACXC,EAAAA,EADJ,EAxEiB,WACb,OAAO,0BACH,SAAC5D,EAAD,KAEP,G","sources":["Pages/Chat/chatPage.jsx"],"sourcesContent":["import React, { useEffect, useRef, memo } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { Button, Input } from \"antd\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { sendMessage, startMessagesListening, stopMessagesListening, unmountChat } from \"../../Redux/chatReducer\"\r\nimport style from './/..//../Components/Dialogs/Dialogs.module.css'\r\nimport { withAuthRedirect } from \"../../Hoc/withAuthRedirect\"\r\nimport { compose } from \"redux\"\r\nconst ChatPage = () => {\r\n    return <div>\r\n        <Chat />\r\n    </div>\r\n}\r\n\r\nconst Chat = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(startMessagesListening())\r\n        return () => {\r\n            dispatch(stopMessagesListening())\r\n            dispatch(unmountChat())\r\n        }\r\n    }, [])\r\n    return <div>\r\n        <Messages />\r\n        <AddMessageForm />\r\n    </div>\r\n}\r\nconst Messages = () => {\r\n    const messages = useSelector((state => state.chat.messages))\r\n    return <div style={{ height: '800px', overflowY: 'auto' }}>\r\n        {messages.map((m, index) => <Message key={m.id} message={m} id={m} />)}\r\n    </div>\r\n}\r\nconst Message = React.memo(({ message }) => {\r\n    console.log('Отрисовка Сообщений')\r\n    const messagesEndRef = useRef(null)\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }\r\n    useEffect(() => {\r\n        scrollToBottom()\r\n    }, [message]);\r\n\r\n    return <div ref={messagesEndRef}>\r\n        <NavLink to={'/profile/' + message.userId}><img style={{ height: 50, width: 40 }} src={message.photo} /></NavLink> <b>{message.userName}</b>\r\n        <br />\r\n        {message.message}\r\n        <hr />\r\n    </div>\r\n})\r\nconst AddMessageForm = () => {\r\n    const [message, setMessage] = useState()\r\n    const dispatch = useDispatch()\r\n    const status = useSelector((state) => state.chat.status)\r\n    const inputRef = useRef(null)\r\n    const [btnStatus, setButtonStatus] = useState(false)\r\n    const sendMessageHandler = () => {\r\n        if (!message) {\r\n            return setButtonStatus(false)\r\n        }\r\n        dispatch(sendMessage(message))\r\n        setMessage('')\r\n        setButtonStatus(false)\r\n    }\r\n    const inputHandler = (e) => {\r\n        if (e == '') { setButtonStatus(false) }\r\n        else\r\n            setButtonStatus(true)\r\n    }\r\n    return <div>\r\n        <div><Input size=\"large\" showCount maxLength={100} onInput={(e) => setMessage(e.currentTarget.value)} ref={inputRef} name={'chatInput'} onChange={(e) => inputHandler(e.currentTarget.value)} value={message} placeholder=\"Введите сообщение\" ></Input></div>\r\n        <br></br>\r\n        <div><button\r\n            className={btnStatus ? style.btn : style.disBtn}\r\n            disabled={status !== 'ready' && btnStatus !== true}\r\n            onClick={sendMessageHandler}>Отправить</button></div>\r\n    </div>\r\n}\r\n// export default ChatPage;\r\nexport default compose(\r\n    withAuthRedirect\r\n)(ChatPage)"],"names":["Chat","dispatch","useDispatch","useEffect","startMessagesListening","stopMessagesListening","unmountChat","Messages","AddMessageForm","messages","useSelector","state","chat","style","height","overflowY","map","m","index","Message","message","id","React","console","log","messagesEndRef","useRef","current","scrollIntoView","behavior","scrollToBottom","ref","to","userId","width","src","photo","userName","useState","setMessage","status","inputRef","btnStatus","setButtonStatus","size","showCount","maxLength","onInput","e","currentTarget","value","name","onChange","inputHandler","placeholder","className","disabled","onClick","sendMessage","compose","withAuthRedirect"],"sourceRoot":""}