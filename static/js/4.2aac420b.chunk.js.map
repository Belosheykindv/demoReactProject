{"version":3,"file":"static/js/4.2aac420b.chunk.js","mappings":"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","sources":["webpack://my-first-app/./src/Components/Profile/ProfileInfo/ProfileInfo.module.css?d872","Components/Profile/ProfileStatus.jsx","Components/Profile/ProfileInfo/ProfileAboutMe.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-first-app/./src/Components/Profile/MyPosts/MyPosts.module.css?f94f","webpack://my-first-app/./src/Components/Profile/MyPosts/Post/Post.module.scss?1aad","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/profile.jsx","Components/Profile/profileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__W0Lb-\",\"profile\":\"ProfileInfo_profile__DKHaQ\",\"infoBlock\":\"ProfileInfo_infoBlock__cfsGP\",\"photoBlock\":\"ProfileInfo_photoBlock__rkBMR\",\"profileAva\":\"ProfileInfo_profileAva__APARW\",\"contact\":\"ProfileInfo_contact__Oa830\",\"key\":\"ProfileInfo_key__tdQe2\",\"aboutMeBlock\":\"ProfileInfo_aboutMeBlock__UZxU-\",\"field\":\"ProfileInfo_field__CkngA\",\"hideUnput\":\"ProfileInfo_hideUnput__L12Nu\"};","\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUserProfileStatus, updateUserProfileStatus } from \"../../Redux/profilePage-reducer\";\r\nimport { connect } from \"react-redux\";\r\n// class ProfileStatus extends React.Component {\r\n//     state = {\r\n//         editMode: false,\r\n//         status: this.props.status\r\n//     }\r\n//     activateEditMode = () => {\r\n//         if (!this.props.userId) {\r\n//             this.setState({\r\n//                 editMode: true\r\n//             })\r\n//         }\r\n//     }\r\n//     deActivateEditMode = () => {\r\n//         this.setState({\r\n//             editMode: false\r\n//         });\r\n//         this.props.updateUserProfileStatus(this.state.status)\r\n//     }\r\n//     onStatusChange = (e) => {\r\n//         this.setState({\r\n//             status: e.currentTarget.value\r\n//         })\r\n//         console.log(this.state.status)\r\n//     }\r\n//     componentDidUpdate(prevProps, prevState) {\r\n//         if (prevProps.status !== this.props.status) {\r\n//             this.setState({\r\n//                 status: this.props.status\r\n//             })\r\n//         }\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 {!this.state.editMode &&\r\n//                     <div>\r\n//                         <span onClick={this.activateEditMode}><b>Статус -</b> {this.props.status || 'пусто'}</span>\r\n//                     </div>}\r\n//                 {this.state.editMode &&\r\n//                     <div>\r\n//                         <input\r\n//                             onChange={this.onStatusChange}\r\n//                             autoFocus={true}\r\n//                             defaultValue={this.state.status}></input>\r\n//                         <button onClick={this.deActivateEditMode}>Сохранить</button>\r\n//                     </div>}\r\n//             </div>\r\n\r\n//         )\r\n//     }\r\n// }\r\n\r\nconst ProfileFuncStatus = (props) => {\r\n    console.log('Рэндер статус')\r\n    const userStatus = useSelector(state => state.profilePage.profileStatus)\r\n    // const userId = useSelector(state => state.auth.id)\r\n    const userId = useParams()\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(userStatus)\r\n    const dispatch = useDispatch()\r\n    const activateEditMode = () => {\r\n        console.log('Эдит мод')\r\n        if (!userId.userId) {\r\n            setEditMode(true)\r\n        }\r\n    }\r\n    const deActivateEditMode = () => {\r\n        console.log('Эдит мод2')\r\n        setEditMode(false)\r\n        dispatch(updateUserProfileStatus(status))\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    // useEffect(() => { setStatus(props.status) }, [props.status])\r\n    return <div>\r\n        {!editMode &&\r\n            <div>\r\n                <span\r\n                    onClick={activateEditMode}\r\n                ><b>Статус - </b>{userStatus || 'пусто'}</span>\r\n            </div>\r\n        }\r\n        {\r\n            editMode &&\r\n            <div >\r\n                <input\r\n                    onChange={onStatusChange}\r\n                    autoFocus={true}\r\n                    defaultValue={userStatus}></input>\r\n                <button onClick={deActivateEditMode}>Сохранить</button>\r\n            </div>\r\n        }\r\n    </div >\r\n}\r\nexport default ProfileFuncStatus;","import React, { useState } from 'react';\r\nimport Preloader from '../../Common/Preloader/preloader';\r\nimport S from './ProfileInfo.module.css'\r\nimport styles from \"../../Common/FormControls/formControls.module.css\"\r\nimport { maxLengthCreator, required } from '../../../Utils/Validators/validators';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { FormCreate, Input, createField } from '../../Common/FormControls/formControls';\r\nimport { updateAboutMe } from '../../../Redux/profilePage-reducer';\r\nimport { connect } from 'react-redux';\r\nimport ProfileFuncStatus from '../ProfileStatus';\r\n\r\nconst maxLength14 = maxLengthCreator(14)\r\nconst maxLength30 = maxLengthCreator(30)\r\nconst maxLength40 = maxLengthCreator(40)\r\n\r\nexport const ProfileAboutMe = ({ profile, ownerId, updateAboutMe, userId, key }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  return <div>\r\n    {!editMode\r\n      ? <div> <Profile key={key} profile={profile} userId={userId} editModeOn={() => { setEditMode(true) }} ownerId={ownerId} /></div>\r\n      : <div><ProfileForm key={key} profile={profile} updateAboutMe={updateAboutMe} editModeOff={() => { setEditMode(false) }} /></div>}\r\n  </div>\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return <div> <b>{contactTitle}</b>: {contactValue} </div>\r\n}\r\n\r\nconst Profile = ({ profile, userId, editModeOn }) => {\r\n  return <div>\r\n    {!userId && <label htmlFor=\"editAboutMe\">Редактировать</label>}\r\n    {!userId && <button onClick={editModeOn} id='editAboutMe' style={{ 'opacity': 0 }}>Редактировать</button>}\r\n    <div>\r\n      <ProfileFuncStatus />\r\n    </div>\r\n    <div><b>Кто я - </b>{profile.fullName}</div>\r\n    <div><b>Обо мне - </b> {profile.aboutMe}</div>\r\n    <div><b>В поисках работы - </b>{profile.lookingForAJob ? \"Да\" : \"Нет\"}</div>\r\n    <div><b>Место работы - </b>{profile.lookingForAJobDescription}</div>\r\n    <div><b>Контакты: </b>{Object.keys(profile.contacts).map((contactTitle) => {\r\n      return <div key={contactTitle} className={S.contact}><Contact contactTitle={contactTitle} contactValue={profile.contacts[contactTitle] || 'Отсутствует'} /> </div>\r\n    })}</div>\r\n\r\n  </div>\r\n\r\n}\r\nconst ProfileForm = ({ updateAboutMe, profile, editModeOff }) => {\r\n\r\n  const onSubmit = (formData) => {\r\n    updateAboutMe(formData).then(() => {\r\n      editModeOff()\r\n    });\r\n  }\r\n  return <ProfileReduxForm onSubmit={onSubmit} initialValues={profile} profile={profile} />\r\n}\r\nconst ProfileFormData = ({ handleSubmit, profile, error }) => {\r\n  return <form onSubmit={handleSubmit}>\r\n    <div >\r\n      <div className={S.aboutMeBlock}>\r\n        <div className={S.key}>Кто я\r\n        </div>\r\n        <div className={S.field}>\r\n          <Field name={'fullName'} component={FormCreate} validate={[required, maxLength14]} fieldType={'input'} />\r\n        </div>\r\n      </div>\r\n      <div className={S.aboutMeBlock}>\r\n        <div className={S.key}> Ищу работу - </div>\r\n        <div className={S.field}>\r\n          <Field name={'lookingForAJob'} component={FormCreate} type={'checkbox'} fieldType={'input'} />\r\n        </div>\r\n      </div>\r\n      <div className={S.aboutMeBlock}>\r\n        <div className={S.key}>Место работы -</div>\r\n        <div className={S.field}>\r\n          <Field name={'lookingForAJobDescription'} validate={[required, maxLength14]} component={FormCreate} fieldType={'input'} /></div>\r\n      </div>\r\n      <div className={S.aboutMeBlock}>\r\n        <div className={S.key}> Обо мне - </div>\r\n        <div className={S.field}>\r\n          <Field name={'aboutMe'} component={FormCreate} validate={[required, maxLength30]} fieldType={'input'} /></div>\r\n      </div>\r\n    </div>\r\n    <div >\r\n      <b>Контакты: </b>{Object.keys(profile.contacts).map((key) => {\r\n        return <div key={key} className={S.contact}>\r\n          <div className={S.key}>\r\n            {key}\r\n          </div>\r\n          <div className={S.field}>\r\n            <Field validate={[maxLength40]} name={'contacts.' + key} component={FormCreate} fieldType={'input'} placeholder={'Введите ваш - ' + key} />\r\n          </div>\r\n        </div>\r\n      })}\r\n    </div>\r\n    {error && <div className={styles.formSummaryError}> {error} </div>}\r\n    <button>Сохранить</button>\r\n  </form>\r\n}\r\nconst ProfileReduxForm = reduxForm({ form: 'aboutMe', enableReinitialize: true })(ProfileFormData)\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport P from './ProfileInfo.module.css';\r\nimport Anonym from '../../../Images/userPhoto.png'\r\nimport Preloader from '../../Common/Preloader/preloader';\r\nimport { ProfileAboutMe } from './ProfileAboutMe';\r\n// import { Field, Form } from 'react-final-form';\r\n\r\nconst ProfileInfo = React.memo((props) => {\r\n  const [isError, setError] = useState(false)\r\n  const [isVisible, setIsvidible] = useState(false)\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n  const onChange = (e) => {\r\n    if (e.target.files[0].size >= 4000000) return setError(true); setIsvidible(true)\r\n    if (e.target.files.length) {\r\n      props.updateUserPhoto(e.target.files[0])\r\n      setError(false)\r\n      setIsvidible(false)\r\n    }\r\n  }\r\n\r\n  return <div>\r\n\r\n    <div className={P.profile}>\r\n      <div className={P.photoBlock}>\r\n        {!props.userId && <label htmlFor=\"upload-photo\">Загрузить новое фото</label>}\r\n        <img\r\n          src={props.profile.photos.large || Anonym}></img>\r\n        {isError && <div style={{ 'border': '2px', 'color': 'red' }}> Файл не должен превышать 4МБ </div>}\r\n        {!props.userId && <input className={P.hideUnput} id=\"upload-photo\" onChange={onChange} type={'file'} />\r\n        }\r\n      </div>\r\n      <div className={P.infoBlock}>\r\n        <div>{<ProfileAboutMe\r\n          key={props.key}\r\n          profile={props.profile}\r\n          userId={props.userId}\r\n          ownerId={props.ownerId}\r\n          updateAboutMe={props.updateAboutMe}\r\n          editModeAboutMe={props.editModeAboutMe}\r\n          status={props.userStatus}\r\n           />}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n)\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"MyPostsClass\":\"MyPosts_MyPostsClass__nRfqi\",\"inputBlock\":\"MyPosts_inputBlock__jOkuq\",\"textBlock\":\"MyPosts_textBlock__gFI2h\",\"btnBlock\":\"MyPosts_btnBlock__9MDle\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__HAcgf\",\"postContainer\":\"Post_postContainer__rhE20\",\"imgContainer\":\"Post_imgContainer__wsgdn\",\"msgContainer\":\"Post_msgContainer__FFWET\",\"btnContainer\":\"Post_btnContainer__GjFL1\",\"likeBtn\":\"Post_likeBtn__lItlp\",\"shareBtn\":\"Post_shareBtn__rCBE9\",\"delBtn\":\"Post_delBtn__Akvj9\"};","import React, { createRef } from 'react';\r\nimport P from './Post.module.scss';\r\nimport { Button } from 'antd';\r\nimport { addLike, deletePost } from '../../../../Redux/profilePage-reducer';\r\nimport { useDispatch } from 'react-redux';\r\nconst Post = React.memo((props) => {\r\n  const dispatch = useDispatch()\r\n  let onAddLike = () => {\r\n    let postId = props.postId\r\n    dispatch(addLike(postId))\r\n  }\r\n  const onDeletePost = () => {\r\n    let postId = props.postId\r\n    dispatch(deletePost(postId))\r\n  }\r\n  return <div key={props.postId} className={P.postContainer}>\r\n    <div className={P.imgContainer}> <img src={props.img}></img></div>\r\n    <div className={P.msgContainer}>{props.message}</div>\r\n    <div className={P.btnContainer}>\r\n      <div className={P.likeBtn}>{props.likesCount}<Button ghost={true} size={'small'} onClick={onAddLike} type={'default'}>❤️</Button> </div>\r\n      <div className={P.shareBtn}>{props.share}<Button ghost={true} size={'small'} type={'default'}>✉</Button></div>\r\n    </div>\r\n    <div className={P.delBtn}><Button onClick={onDeletePost} type={'default'} ghost={true}>❌</Button></div>\r\n  </div >\r\n\r\n\r\n})\r\nexport default Post;","import React, { useState, useEffect } from 'react';\r\nimport P from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Button, Input, Form as AntDForm } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addPost} from '../../../Redux/profilePage-reducer';\r\n// const maxLength60 = maxLengthCreator(60);\r\n\r\nconst MyPosts = (props) => {\r\n  const [isActive, setIsActive] = useState(false)\r\n  const [form] = AntDForm.useForm();\r\n  const dispath = useDispatch();\r\n  const onFinish = (values) => {\r\n    dispath(addPost(values.postInput));\r\n    form.resetFields(['postInput'])\r\n    setIsActive(false)\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    props.addPost(values.addNewPost);\r\n    values.addNewPost = ''\r\n\r\n    setIsActive(false)\r\n  }\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  const buttonHandler = (e) => {\r\n    if (e == '') { setIsActive(false) }\r\n    else\r\n      setIsActive(true)\r\n  }\r\n  let state = (props.profilePage)\r\n  let postsElements = state.posts.map((p) => <Post postId={p.id} message={p.message} likesCount={p.likesCount} share={p.share} img={p.imgSrc} key={p.id} />);\r\n  let userId = Number(props.router.params.userId || props.ownerUserId);\r\n  const addPostInput = document.getElementById('addNewPost')\r\n  if (userId) {\r\n    return null\r\n  }\r\n  return <div className={P.profile}>\r\n    <div className={P.MyPostsClass}>\r\n      <h3>Мои посты (Хардкод Без API)</h3>\r\n      <div >\r\n        <AntDForm className={P.inputBlock} onFinish={onFinish} onFinishFailed={onFinishFailed} form={form}  >\r\n          <AntDForm.Item name={\"postInput\"} className={P.textBlock}>\r\n            <Input name={'postInput'} showCount={true} maxLength={600} placeholder=\"Введите сообщение\" onInput={(e) => { buttonHandler(e.currentTarget.value) }} />\r\n          </AntDForm.Item>\r\n          <AntDForm.Item className={P.btnBlock}>\r\n            <Button disabled={isActive != true} className={P.btnBlock} htmlType=\"submit\">Добавить</Button>\r\n          </AntDForm.Item>\r\n        </AntDForm>\r\n      </div>\r\n      <div>{postsElements}</div>\r\n\r\n    </div>\r\n  </div>\r\n}\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostTextActionCreator, addPostLikeActionCreator } from '../../../Redux/profilePage-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { withAuthRedirect } from '../../../Hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from '../../../Hoc/withRouter';\r\n// import { addLike, addPost, deletePost } from '../../../Redux/profilePage-reducer';\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profilePage: (state.profilePage),\r\n    isAuth: state.auth.isAuth,\r\n    ownerId: state.auth.id\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(MyPosts);\r\n","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n\r\n  return <div>\r\n    <ProfileInfo\r\n      profile={props.profile}\r\n      userId={props.userId}\r\n      ownerId={props.ownerId}\r\n      userStatus={props.userStatus}\r\n      updateAboutMe={props.updateAboutMe}\r\n      savePhoto={props.savePhoto}\r\n      updateUserPhoto={props.updateUserPhoto}\r\n      editModeAboutMe={props.editModeAboutMe}\r\n      key={props.key}\r\n    />\r\n    <MyPostsContainer />\r\n\r\n  </div>\r\n\r\n}\r\n\r\nexport default Profile;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './profile';\r\nimport { getUserProfile, getUserProfileStatus, getUserAboutMe, updateUserProfileStatus, updateAboutMe, updateUserPhoto } from '../../Redux/profilePage-reducer';\r\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../Hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { maxLengthCreator } from '../../Utils/Validators/validators';\r\n\r\nexport function withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return (\r\n      <Component\r\n        {...props}\r\n        router={{ location, navigate, params }}\r\n      />\r\n    );\r\n  }\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\n// class ProfileContainer extends React.Component {\r\n//   refreshProfile() {\r\n//     const userId = this.props.router.params.userId || this.props.ownerUserId;\r\n//     this.props.getUserProfile(userId)\r\n//     this.props.getUserProfileStatus(userId)\r\n//     this.props.getUserAboutMe(userId)\r\n//   }\r\n//   componentDidMount() {\r\n//     this.refreshProfile()\r\n//   }\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if (this.props.router.params.userId != prevProps.router.params.userId) {\r\n//       this.refreshProfile()\r\n//     }\r\n\r\n//   }\r\n\r\n//   render() {\r\n//     return <div>\r\n//       <Profile {...this.props}\r\n//         profile={this.props.profile}\r\n//         userId={this.props.router.params.userId}\r\n//         ownerId={this.props.ownerUserId}\r\n//         userStatus={this.props.userStatus}\r\n//         updateUserProfileStatus={this.props.updateUserProfileStatus}\r\n//         updateAboutMe={this.props.updateAboutMe}\r\n//         updateUserPhoto={this.props.updateUserPhoto}\r\n//         editModeAboutMe={this.props.editModeAboutMe}\r\n//       // key={this.props.key}\r\n//       />\r\n//     </div>\r\n//   }\r\n// }\r\n\r\nconst ProfileContainer = (props) => {\r\n  console.log('Внутри контейнера профайл')\r\n  const refreshProfile = () => {\r\n    const userId = props.router.params.userId || props.ownerUserId;\r\n    props.getUserProfile(userId)\r\n    props.getUserProfileStatus(userId)\r\n    // props.getUserAboutMe(userId)\r\n  }\r\n  // useEffect(() => {\r\n  //   refreshProfile()\r\n  // }, [props.router.params.userId]);\r\n  useEffect(() => { refreshProfile() }, [])\r\n  return <div>\r\n    <Profile {...props}\r\n      profile={props.profile}\r\n      userId={props.router.params.userId}\r\n      ownerId={props.ownerUserId}\r\n      userStatus={props.userStatus}\r\n      updateAboutMe={props.updateAboutMe}\r\n      updateUserPhoto={props.updateUserPhoto}\r\n      editModeAboutMe={props.editModeAboutMe}\r\n      key={props.key}\r\n    />\r\n  </div>\r\n}\r\n\r\nlet matStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  userStatus: state.profilePage.profileStatus,\r\n  ownerUserId: state.auth.id,\r\n  editModeAboutMe: state.profilePage.editModeAboutMe,\r\n  key: state.profilePage.key\r\n  // aboutMe: state.profilePage.aboutMe,\r\n  // lookingForAJobDescription: state.profilePage.lookingForAJobDescription\r\n})\r\nexport default compose(\r\n  connect(matStateToProps, { getUserProfile, getUserProfileStatus, updateAboutMe,\r\n     updateUserPhoto, maxLengthCreator }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)\r\n"],"names":["props","console","log","userStatus","useSelector","state","profilePage","profileStatus","userId","useParams","useState","editMode","setEditMode","status","setStatus","dispatch","useDispatch","onClick","onChange","e","currentTarget","value","autoFocus","defaultValue","updateUserProfileStatus","maxLength14","maxLengthCreator","maxLength30","maxLength40","ProfileAboutMe","profile","ownerId","updateAboutMe","key","ProfileForm","editModeOff","Profile","editModeOn","Contact","contactTitle","contactValue","htmlFor","id","style","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","map","className","S","ProfileReduxForm","onSubmit","formData","then","initialValues","reduxForm","form","enableReinitialize","handleSubmit","error","Field","name","component","FormCreate","validate","required","fieldType","type","placeholder","styles","React","isError","setError","setIsvidible","P","src","photos","large","Anonym","target","files","size","length","updateUserPhoto","editModeAboutMe","img","message","likesCount","ghost","postId","addLike","share","deletePost","isActive","setIsActive","AntDForm","dispath","postsElements","posts","p","imgSrc","Number","router","params","ownerUserId","document","getElementById","onFinish","values","addPost","postInput","resetFields","onFinishFailed","errorInfo","showCount","maxLength","onInput","buttonHandler","disabled","htmlType","compose","connect","isAuth","auth","withRouter","withAuthRedirect","MyPosts","savePhoto","MyPostsContainer","Component","location","useLocation","navigate","useNavigate","getUserProfile","getUserProfileStatus","useEffect","refreshProfile"],"sourceRoot":""}