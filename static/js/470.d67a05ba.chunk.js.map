{"version":3,"file":"static/js/470.d67a05ba.chunk.js","mappings":"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","sources":["Pages/Chat/chatPage.jsx","webpack://my-first-app/./src/Components/Dialogs/Dialogs.module.css?db5c"],"sourcesContent":["import React, { useEffect, useRef, memo } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { Button, Input, theme } from \"antd\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { sendMessage, startMessagesListening, startStatusListening, stopMessagesListening, stopStatusListening, unmountChat } from \"../../Redux/chatReducer\"\r\nimport style from './/..//../Components/Dialogs/Dialogs.module.css'\r\nimport { withAuthRedirect } from \"../../Hoc/withAuthRedirect\"\r\nimport { compose } from \"redux\"\r\nimport userPhoto from './/..//..//Images/userPhoto.png'\r\nconst ChatPage = () => {\r\n    return <div>\r\n        <Chat />\r\n    </div>\r\n}\r\n\r\nconst Chat = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(startMessagesListening())\r\n        dispatch(startStatusListening())\r\n        return () => {\r\n            dispatch(stopMessagesListening())\r\n            dispatch(stopStatusListening())\r\n            dispatch(unmountChat())\r\n        }\r\n    }, [])\r\n    return <div>\r\n        <Messages />\r\n        <AddMessageForm />\r\n    </div>\r\n}\r\nconst Messages = () => {\r\n    const messages = useSelector((state => state.chat.messages))\r\n    return <div style={{ height: '800px', overflowY: 'auto' }}>\r\n        {messages.map((m, index) => <Message key={m.id} message={m} id={m} />)}\r\n    </div>\r\n}\r\nconst Message = React.memo(({ message }) => {\r\n    console.log('Отрисовка Сообщений')\r\n    const { token: { colorBgContainer, borderRadiusLG } } = theme.useToken();\r\n    const messagesEndRef = useRef(null)\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }\r\n    useEffect(() => {\r\n        scrollToBottom()\r\n    }, [message]);\r\n\r\n    return <div style={{\r\n        margin: '4px 6px',\r\n        padding: 4,\r\n        // minHeight: 280,\r\n        background: colorBgContainer,\r\n        borderRadius: borderRadiusLG\r\n    }} ref={messagesEndRef}>\r\n        <NavLink to={'/profile/' + message.userId}><img style={{ height: 50, width: 40, borderRadius: '10px' }} src={message.photo || userPhoto} /></NavLink>\r\n        <span style={{ position: 'relative', bottom: '20px', left: '10px', fontSize: '1.2rem' }}>{message.userName} </span>\r\n        <br />\r\n        <span style={{ fontSize: '1.0rem' }} >{message.message}</span>\r\n        {/* <br /> */}\r\n\r\n        <hr />\r\n    </div>\r\n})\r\nconst AddMessageForm = () => {\r\n    const [message, setMessage] = useState()\r\n    const dispatch = useDispatch()\r\n    const status = useSelector((state) => state.chat.status)\r\n    const inputRef = useRef(null)\r\n    const [btnStatus, setButtonStatus] = useState(false)\r\n    const sendMessageHandler = () => {\r\n        if (!message) {\r\n            return setButtonStatus(false)\r\n        }\r\n        dispatch(sendMessage(message))\r\n        setMessage('')\r\n        setButtonStatus(false)\r\n    }\r\n    const inputHandler = (e) => {\r\n        if (e == '') { setButtonStatus(false) }\r\n        else\r\n            setButtonStatus(true)\r\n    }\r\n    return <div>\r\n        <div><Input size=\"large\" showCount maxLength={100} onInput={(e) => setMessage(e.currentTarget.value)} ref={inputRef} name={'chatInput'} onChange={(e) => inputHandler(e.currentTarget.value)} value={message} placeholder=\"Введите сообщение\" ></Input></div>\r\n        <br></br>\r\n        <div><button\r\n            className={btnStatus ? style.btn : style.disBtn}\r\n            disabled={status !== 'ready' && btnStatus !== true}\r\n            onClick={sendMessageHandler}>Отправить</button></div>\r\n    </div>\r\n}\r\n// export default ChatPage;\r\nexport default compose(\r\n    withAuthRedirect\r\n)(ChatPage)","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__prqlk\",\"dialogsItems\":\"Dialogs_dialogsItems__MsBDq\",\"active\":\"Dialogs_active__XGQ+o\",\"messages\":\"Dialogs_messages__1ybel\",\"button\":\"Dialogs_button__6VBcC\",\"btn\":\"Dialogs_btn__ayx5J\",\"disBtn\":\"Dialogs_disBtn__pjuCW\",\"todoMain\":\"Dialogs_todoMain__REx+I\",\"todoInput\":\"Dialogs_todoInput__upOVV\",\"todoList\":\"Dialogs_todoList__TxKrX\",\"inputCB\":\"Dialogs_inputCB__-QJXn\"};"],"names":["Chat","dispatch","useDispatch","useEffect","startMessagesListening","startStatusListening","stopMessagesListening","stopStatusListening","unmountChat","Messages","AddMessageForm","messages","useSelector","state","chat","style","height","overflowY","map","m","index","Message","message","id","React","console","log","theme","token","colorBgContainer","borderRadiusLG","messagesEndRef","useRef","current","scrollIntoView","behavior","scrollToBottom","margin","padding","background","borderRadius","ref","to","userId","width","src","photo","userPhoto","position","bottom","left","fontSize","userName","useState","setMessage","status","inputRef","btnStatus","setButtonStatus","size","showCount","maxLength","onInput","e","currentTarget","value","name","onChange","inputHandler","placeholder","className","disabled","onClick","sendMessage","compose","withAuthRedirect"],"sourceRoot":""}